name: CI
on:
  push:
    branches:
    - master
    tags:
    - "v*"
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        SCALA_VERSION: ["2.12.16", "2.13.8"]
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6.3
    - uses: coursier/setup-action@v1.2.0
      with:
        jvm: 8
    - name: Test
      run: sbtn ++${{ matrix.SCALA_VERSION }} test

  bin-compat:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6.3
    - uses: coursier/setup-action@v1.2.0
      with:
        jvm: 8
    - name: Test
      run: sbtn +mimaReportBinaryIssues

  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6.3
    - uses: coursier/setup-action@v1.2.0
      with:
        jvm: 8
        apps: scalafmt:3.0.8
    - run: scalafmt --check

  publish:
    needs: [test, bin-compat]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6.3
    - uses: coursier/setup-action@v1.2.0
      with:
        jvm: 8
    - run: .github/scripts/gpg-setup.sh
      env:
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
    - name: Release
      run: sbtn ci-release
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
