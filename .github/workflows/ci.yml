name: CI
on:
  push:
    branches:
    - main
    tags:
    - "v*"
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        SCALA_VERSION: ["2.12.19", "2.13.14", "3.3.3"]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6.4
    - uses: coursier/setup-action@v1.3
      with:
        jvm: 8
    - name: Test
      run: ./mill -i '__[${{ matrix.SCALA_VERSION }}].test'

  bin-compat:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6.4
    - uses: coursier/setup-action@v1.3
      with:
        jvm: 8
    - name: Check
      run: ./mill -i __.mimaReportBinaryIssues

  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6.4
    - uses: coursier/setup-action@v1.3
      with:
        jvm: 8
        apps: scalafmt:3.7.14
    - run: scalafmt --check

  doc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6.4
    - uses: coursier/setup-action@v1.3
      with:
        jvm: 17
    - run: |
        .github/scripts/setup-mkdocs.sh && \
        ./mill -i docs.mkdocsBuild

  publish:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6.4
    - uses: coursier/setup-action@v1.3
      with:
        jvm: 8
    - run: .github/scripts/gpg-setup.sh
      env:
        PGP_SECRET: ${{ secrets.PUBLISH_SECRET_KEY }}
    - name: Wrap GPG binary
      run: .github/scripts/wrap-gpg.sh
    - name: Release
      run: ./mill -i ci.publishSonatype __.publishArtifacts
      env:
        PGP_PASSPHRASE: ${{ secrets.PUBLISH_SECRET_KEY_PASSWORD }}
        PGP_SECRET: ${{ secrets.PUBLISH_SECRET_KEY }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

  update-website:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6.4
    - uses: coursier/setup-action@v1.3
      with:
        jvm: 17
    - run: |
        .github/scripts/setup-mkdocs.sh && \
        ./mill -i docs.mkdocsGhDeploy
